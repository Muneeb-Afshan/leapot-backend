openapi: 3.0.0
info:
  title: Leapot LMS
  description: API documentation for my Leapot LMS 
  version: 1.0.0
paths:
  /api/register:
    post:
      summary: Register a new user
      tags:
        - Authentication
      description: |
        This endpoint allows an admin to register a new user.
        It expects the user's email and role in the request body.
        Upon successful registration, the user is added to the database.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                role:
                  type: string
              required:
                - email
                - role
      responses:
        '201':
          description: User registered successfully
        '400':
          description: Bad request
  /api/login:
    post:
      summary: Login user using Google
      tags:
        - Authentication
      description: |
        This endpoint allows a user to log in using Google authentication.
        It expects user information including name, email, picture, etc.
        If the user already exists in the database, their details are updated.
        Otherwise, an error message is returned.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
                picture:
                  type: string
                email_verified:
                  type: boolean
                user_id:
                  type: string
      responses:
        '200':
          description: User logged in successfully
        '400':
          description: Bad request

  /api/userProfile:
    post:
      summary: To get use and Update user profile by email
      tags:
        - UserProfile
      description: |
        This endpoint updates the profile of a user identified by their email address.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                username:
                  type: string
                dateofbirth:
                  type: string
                bio:
                  type: string
                country:
                  type: string
                state:
                  type: string
                city:
                  type: string
                address:
                  type: string
                phoneNo:
                  type: string
                picture:
                  type: string
      responses:
        '200':
          description: User profile updated successfully
        '500':
          description: Server error

  /api/FindUserDetails:
    get:
      summary: Find all users details
      tags:
        - UserProfile
      description: |
        This endpoint retrieves details of all users.
      responses:
        '200':
          description: List of user details
        '500':
          description: Server error

  /api/updateUserstatus:
    put:
      summary: Update user status by email
      tags:
        - UserProfile
      description: |
        This endpoint updates the status of a user identified by their email address.
      
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                userStatus:
                  type: string
      responses:
        '200':
          description: User status updated successfully
        '404':
          description: User not found
        '500':
          description: Server error

  /api/updateDeleteStatus:
    put:
      summary: Update delete status by email
      tags:
        - UserProfile
      description: |
        This endpoint updates the delete status of a user identified by their email address.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                deleteStatus:
                  type: boolean
      responses:
        '200':
          description: Delete status updated successfully
        '404':
          description: User not found
        '500':
          description: Server error
 
  /api/insertTeamData:
    post:
      summary: Create new team data 
      tags:
        - Team Details
      description: |
        This endpoint allows you to create new team data including the team member's name, designation, description, and image.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                designation:
                  type: string
                description:
                  type: string
                image:
                  type: string
      responses:
        '201':
          description: Team data created successfully
        '400':
          description: Bad request, missing required fields
  /api/getTeamData:
    get:
      summary: Get all team details
      tags:
        - Team Details
      description: |
        This endpoint retrieves all team details including the names, designations, descriptions, and images of all team members.
      responses:
        '200':
          description: List of team details
        '500':
          description: Server error

  /api/contact-form:
    post:
      summary: Submit contact form
      description: |
        This endpoint allows users to submit a contact form with their name, email, subject, message, and optional attachments.
      tags:
        - Utility
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
                subject:
                  type: string
                message:
                  type: string
                attachments:
                  type: array
                  items:
                    type: string
      responses:
        '201':
          description: Contact form submitted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  ContactForm:
                    type: object
                    properties:
                      name:
                        type: string
                      email:
                        type: string
                      subject:
                        type: string
                      message:
                        type: string
                      attachments:
                        type: array
                        items:
                          type: string
        '500':
          description: Server error

  /api/faq:
    post:
      summary: Create new FAQ
      description: |
        This endpoint allows admins to create a new FAQ with a question and an answer.
      tags:
        - Utility
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                question:
                  type: string
                answer:
                  type: string
      responses:
        '201':
          description: FAQ created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  _id:
                    type: string
                  question:
                    type: string
                  answer:
                    type: string
        '500':
          description: Server error

    /api/get:
      summary: Get all FAQs
      description: |
        This endpoint retrieves all frequently asked questions (FAQs).
      tags:
        - Utility
      responses:
        '200':
          description: List of FAQs
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    _id:
                      type: string
                    question:
                      type: string
                    answer:
                      type: string
        '500':
          description: Server error